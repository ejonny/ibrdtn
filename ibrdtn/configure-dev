#!/bin/sh
#

set -e

# by default cppunit framework is included for unit testing
CONF_PARAMS="--with-cppunit"

# include openssl library
CONF_PARAMS="${CONF_PARAMS} --with-openssl"

# include curl library
CONF_PARAMS="${CONF_PARAMS} --with-curl"

# include lowpan (IEEE 802.15.4) features
CONF_PARAMS="${CONF_PARAMS} --with-lowpan"

# include sqlite library
CONF_PARAMS="${CONF_PARAMS} --with-sqlite"

# include support for the bundle security protocol
CONF_PARAMS="${CONF_PARAMS} --with-dtnsec"

# include compression support (zlib)
CONF_PARAMS="${CONF_PARAMS} --with-compression"

# include xml support (ibrcommon only)
CONF_PARAMS="${CONF_PARAMS} --with-xml"

# include tls support using openssl
CONF_PARAMS="${CONF_PARAMS} --with-tls"

# include dtndht library
CONF_PARAMS="${CONF_PARAMS} --with-dht"

# configures the project to be verbose and pedantic to coding errors and mistakes.
DEVFLAGS="-Wall -Wextra -pedantic -Wconversion -D__DEVELOPMENT_ASSERTIONS__"

if [ -e .coverage ]; then
	# enable debugging symbols and code coverage testing
	export CXXFLAGS="-g -O0 ${DEVFLAGS} -fprofile-arcs -ftest-coverage"
	export CFLAGS="-g -O0 ${DEVFLAGS} -fprofile-arcs -ftest-coverage"
	export LDFLAGS="-fprofile-arcs -ftest-coverage"

	./configure $CONF_PARAMS $@
else
	# enable debugging symbols
	./configure CXXFLAGS="-ggdb -g3 ${DEVFLAGS}" $CONF_PARAMS $@
fi

